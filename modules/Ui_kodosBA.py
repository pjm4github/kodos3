# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\PJM\PycharmProjects\kodos\modules\kodosBA.ui'
#
# Created by: PyQt5 UI code generator 5.10
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(564, 729)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setObjectName("groupBox")
        self.gridlayout = QtWidgets.QGridLayout(self.groupBox)
        self.gridlayout.setObjectName("gridlayout")
        self._2 = QtWidgets.QHBoxLayout()
        self._2.setObjectName("_2")
        spacerItem = QtWidgets.QSpacerItem(70, 31, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self._2.addItem(spacerItem)
        self.textLabel1 = QtWidgets.QLabel(self.groupBox)
        self.textLabel1.setWordWrap(False)
        self.textLabel1.setObjectName("textLabel1")
        self._2.addWidget(self.textLabel1)
        self.matchNumberSpinBox = QtWidgets.QSpinBox(self.groupBox)
        self.matchNumberSpinBox.setMinimum(1)
        self.matchNumberSpinBox.setMaximum(9999)
        self.matchNumberSpinBox.setObjectName("matchNumberSpinBox")
        self._2.addWidget(self.matchNumberSpinBox)
        self.spacerLabel = QtWidgets.QLabel(self.groupBox)
        self.spacerLabel.setPixmap(QtGui.QPixmap("image1"))
        self.spacerLabel.setWordWrap(False)
        self.spacerLabel.setObjectName("spacerLabel")
        self._2.addWidget(self.spacerLabel)
        self.replaceLabel = QtWidgets.QLabel(self.groupBox)
        self.replaceLabel.setWordWrap(False)
        self.replaceLabel.setObjectName("replaceLabel")
        self._2.addWidget(self.replaceLabel)
        self.replaceNumberSpinBox = QtWidgets.QSpinBox(self.groupBox)
        self.replaceNumberSpinBox.setObjectName("replaceNumberSpinBox")
        self._2.addWidget(self.replaceNumberSpinBox)
        spacerItem1 = QtWidgets.QSpacerItem(118, 21, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self._2.addItem(spacerItem1)
        self.gridlayout.addLayout(self._2, 5, 0, 1, 1)
        self.tabWidget3 = QtWidgets.QTabWidget(self.groupBox)
        self.tabWidget3.setObjectName("tabWidget3")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self._3 = QtWidgets.QGridLayout(self.tab)
        self._3.setObjectName("_3")
        self.stringMultiLineEdit = QtWidgets.QTextEdit(self.tab)
        self.stringMultiLineEdit.setObjectName("stringMultiLineEdit")
        self._3.addWidget(self.stringMultiLineEdit, 0, 0, 1, 1)
        self.tabWidget3.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self._4 = QtWidgets.QGridLayout(self.tab_2)
        self._4.setObjectName("_4")
        self.replaceTextEdit = QtWidgets.QTextEdit(self.tab_2)
        self.replaceTextEdit.setObjectName("replaceTextEdit")
        self._4.addWidget(self.replaceTextEdit, 0, 0, 1, 1)
        self.tabWidget3.addTab(self.tab_2, "")
        self.gridlayout.addWidget(self.tabWidget3, 4, 0, 1, 1)
        self.resultTabWidget = QtWidgets.QTabWidget(self.groupBox)
        self.resultTabWidget.setObjectName("resultTabWidget")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self._5 = QtWidgets.QGridLayout(self.tab_3)
        self._5.setObjectName("_5")
        self.groupTable = QtWidgets.QTableWidget(self.tab_3)
        self.groupTable.setObjectName("groupTable")
        self.groupTable.setColumnCount(0)
        self.groupTable.setRowCount(0)
        self._5.addWidget(self.groupTable, 0, 0, 1, 1)
        self.resultTabWidget.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self._6 = QtWidgets.QGridLayout(self.tab_4)
        self._6.setObjectName("_6")
        self.matchTextBrowser = QtWidgets.QTextBrowser(self.tab_4)
        self.matchTextBrowser.setObjectName("matchTextBrowser")
        self._6.addWidget(self.matchTextBrowser, 0, 0, 1, 1)
        self.resultTabWidget.addTab(self.tab_4, "")
        self.TabPage = QtWidgets.QWidget()
        self.TabPage.setObjectName("TabPage")
        self._7 = QtWidgets.QGridLayout(self.TabPage)
        self._7.setObjectName("_7")
        self.matchAllTextBrowser = QtWidgets.QTextBrowser(self.TabPage)
        self.matchAllTextBrowser.setObjectName("matchAllTextBrowser")
        self._7.addWidget(self.matchAllTextBrowser, 0, 0, 1, 1)
        self.resultTabWidget.addTab(self.TabPage, "")
        self.TabPage_2 = QtWidgets.QWidget()
        self.TabPage_2.setObjectName("TabPage_2")
        self._8 = QtWidgets.QVBoxLayout(self.TabPage_2)
        self._8.setObjectName("_8")
        self.replaceTextBrowser = QtWidgets.QTextBrowser(self.TabPage_2)
        self.replaceTextBrowser.setObjectName("replaceTextBrowser")
        self._8.addWidget(self.replaceTextBrowser)
        self.resultTabWidget.addTab(self.TabPage_2, "")
        self.TabPage_3 = QtWidgets.QWidget()
        self.TabPage_3.setObjectName("TabPage_3")
        self._9 = QtWidgets.QGridLayout(self.TabPage_3)
        self._9.setObjectName("_9")
        self.codeTextBrowser = QtWidgets.QTextBrowser(self.TabPage_3)
        self.codeTextBrowser.setObjectName("codeTextBrowser")
        self._9.addWidget(self.codeTextBrowser, 0, 0, 1, 1)
        self.resultTabWidget.addTab(self.TabPage_3, "")
        self.gridlayout.addWidget(self.resultTabWidget, 6, 0, 1, 1)
        self.groupBox1 = QtWidgets.QGroupBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox1.sizePolicy().hasHeightForWidth())
        self.groupBox1.setSizePolicy(sizePolicy)
        self.groupBox1.setObjectName("groupBox1")
        self._10 = QtWidgets.QGridLayout(self.groupBox1)
        self._10.setObjectName("_10")
        self.regexMultiLineEdit = QtWidgets.QTextEdit(self.groupBox1)
        self.regexMultiLineEdit.setObjectName("regexMultiLineEdit")
        self._10.addWidget(self.regexMultiLineEdit, 0, 0, 1, 1)
        self.gridlayout.addWidget(self.groupBox1, 0, 0, 1, 1)
        self.buttonGroup2 = QtWidgets.QGroupBox(self.groupBox)
        self.buttonGroup2.setObjectName("buttonGroup2")
        self._11 = QtWidgets.QHBoxLayout(self.buttonGroup2)
        self._11.setObjectName("_11")
        self.ignorecaseCheckBox = QtWidgets.QCheckBox(self.buttonGroup2)
        self.ignorecaseCheckBox.setObjectName("ignorecaseCheckBox")
        self._11.addWidget(self.ignorecaseCheckBox)
        self.multilineCheckBox = QtWidgets.QCheckBox(self.buttonGroup2)
        self.multilineCheckBox.setObjectName("multilineCheckBox")
        self._11.addWidget(self.multilineCheckBox)
        self.dotallCheckBox = QtWidgets.QCheckBox(self.buttonGroup2)
        self.dotallCheckBox.setObjectName("dotallCheckBox")
        self._11.addWidget(self.dotallCheckBox)
        self.verboseCheckBox = QtWidgets.QCheckBox(self.buttonGroup2)
        self.verboseCheckBox.setObjectName("verboseCheckBox")
        self._11.addWidget(self.verboseCheckBox)
        self.localeCheckBox = QtWidgets.QCheckBox(self.buttonGroup2)
        self.localeCheckBox.setObjectName("localeCheckBox")
        self._11.addWidget(self.localeCheckBox)
        self.unicodeCheckBox = QtWidgets.QCheckBox(self.buttonGroup2)
        self.unicodeCheckBox.setObjectName("unicodeCheckBox")
        self._11.addWidget(self.unicodeCheckBox)
        self.gridlayout.addWidget(self.buttonGroup2, 3, 0, 1, 1)
        self.gridLayout.addWidget(self.groupBox, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 564, 21))
        self.menubar.setObjectName("menubar")
        self.fileMenu = QtWidgets.QMenu(self.menubar)
        self.fileMenu.setObjectName("fileMenu")
        self.editMenu = QtWidgets.QMenu(self.menubar)
        self.editMenu.setObjectName("editMenu")
        self.helpMenu = QtWidgets.QMenu(self.menubar)
        self.helpMenu.setObjectName("helpMenu")
        self.fileNewAction = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("image2"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.fileNewAction.setIcon(icon)
        self.fileNewAction.setProperty("name", "fileNewAction")
        self.fileNewAction.setObjectName("fileNewAction")
        self.fileOpenAction = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("image3"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.fileOpenAction.setIcon(icon1)
        self.fileOpenAction.setProperty("name", "fileOpenAction")
        self.fileOpenAction.setObjectName("fileOpenAction")
        self.fileSaveAction = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("image4"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.fileSaveAction.setIcon(icon2)
        self.fileSaveAction.setProperty("name", "fileSaveAction")
        self.fileSaveAction.setObjectName("fileSaveAction")
        self.fileSaveAsAction = QtWidgets.QAction(MainWindow)
        self.fileSaveAsAction.setShortcut("")
        self.fileSaveAsAction.setProperty("name", "fileSaveAsAction")
        self.fileSaveAsAction.setObjectName("fileSaveAsAction")
        self.fileExitAction = QtWidgets.QAction(MainWindow)
        self.fileExitAction.setShortcut("")
        self.fileExitAction.setProperty("name", "fileExitAction")
        self.fileExitAction.setObjectName("fileExitAction")
        self.editUndoAction = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("image5"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.editUndoAction.setIcon(icon3)
        self.editUndoAction.setProperty("name", "editUndoAction")
        self.editUndoAction.setObjectName("editUndoAction")
        self.editRedoAction = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("image6"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.editRedoAction.setIcon(icon4)
        self.editRedoAction.setProperty("name", "editRedoAction")
        self.editRedoAction.setObjectName("editRedoAction")
        self.editCutAction = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("image7"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.editCutAction.setIcon(icon5)
        self.editCutAction.setProperty("name", "editCutAction")
        self.editCutAction.setObjectName("editCutAction")
        self.editCopyAction = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("image8"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.editCopyAction.setIcon(icon6)
        self.editCopyAction.setProperty("name", "editCopyAction")
        self.editCopyAction.setObjectName("editCopyAction")
        self.editPasteAction = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("image9"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.editPasteAction.setIcon(icon7)
        self.editPasteAction.setProperty("name", "editPasteAction")
        self.editPasteAction.setObjectName("editPasteAction")
        self.examineAction = QtWidgets.QAction(MainWindow)
        self.examineAction.setCheckable(True)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("image10"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.examineAction.setIcon(icon8)
        self.examineAction.setProperty("name", "examineAction")
        self.examineAction.setObjectName("examineAction")
        self.helpContentsAction = QtWidgets.QAction(MainWindow)
        self.helpContentsAction.setShortcut("")
        self.helpContentsAction.setProperty("name", "helpContentsAction")
        self.helpContentsAction.setObjectName("helpContentsAction")
        self.helpIndexAction = QtWidgets.QAction(MainWindow)
        self.helpIndexAction.setShortcut("")
        self.helpIndexAction.setProperty("name", "helpIndexAction")
        self.helpIndexAction.setObjectName("helpIndexAction")
        self.helpAboutAction = QtWidgets.QAction(MainWindow)
        self.helpAboutAction.setShortcut("")
        self.helpAboutAction.setProperty("name", "helpAboutAction")
        self.helpAboutAction.setObjectName("helpAboutAction")
        self.regexChangedAction = QtWidgets.QAction(MainWindow)
        self.regexChangedAction.setProperty("name", "regexChangedAction")
        self.regexChangedAction.setObjectName("regexChangedAction")
        self.editPauseAction = QtWidgets.QAction(MainWindow)
        self.editPauseAction.setCheckable(True)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("image11"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.editPauseAction.setIcon(icon9)
        self.editPauseAction.setProperty("name", "editPauseAction")
        self.editPauseAction.setObjectName("editPauseAction")
        self.editPreferencesAction = QtWidgets.QAction(MainWindow)
        self.editPreferencesAction.setProperty("name", "editPreferencesAction")
        self.editPreferencesAction.setObjectName("editPreferencesAction")
        self.helpHelpAction = QtWidgets.QAction(MainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("image12"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.helpHelpAction.setIcon(icon10)
        self.helpHelpAction.setProperty("name", "helpHelpAction")
        self.helpHelpAction.setObjectName("helpHelpAction")
        self.helpPythonHelpAction = QtWidgets.QAction(MainWindow)
        self.helpPythonHelpAction.setProperty("name", "helpPythonHelpAction")
        self.helpPythonHelpAction.setObjectName("helpPythonHelpAction")
        self.helpRegexReferenceAction = QtWidgets.QAction(MainWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("image13"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.helpRegexReferenceAction.setIcon(icon11)
        self.helpRegexReferenceAction.setProperty("name", "helpRegexReferenceAction")
        self.helpRegexReferenceAction.setObjectName("helpRegexReferenceAction")
        self.helpVisitWebsiteAction = QtWidgets.QAction(MainWindow)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("image14"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.helpVisitWebsiteAction.setIcon(icon12)
        self.helpVisitWebsiteAction.setProperty("name", "helpVisitWebsiteAction")
        self.helpVisitWebsiteAction.setObjectName("helpVisitWebsiteAction")
        self.helpCheckForUpdateAction = QtWidgets.QAction(MainWindow)
        self.helpCheckForUpdateAction.setProperty("name", "helpCheckForUpdateAction")
        self.helpCheckForUpdateAction.setObjectName("helpCheckForUpdateAction")
        self.helpReportBugAction = QtWidgets.QAction(MainWindow)
        self.helpReportBugAction.setProperty("name", "helpReportBugAction")
        self.helpReportBugAction.setObjectName("helpReportBugAction")
        self.noopAction = QtWidgets.QAction(MainWindow)
        self.noopAction.setEnabled(True)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap("image15"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.noopAction.setIcon(icon13)
        self.noopAction.setText("")
        self.noopAction.setIconText("")
        self.noopAction.setProperty("name", "noopAction")
        self.noopAction.setObjectName("noopAction")
        self.fileImportFileAction = QtWidgets.QAction(MainWindow)
        self.fileImportFileAction.setProperty("name", "fileImportFileAction")
        self.fileImportFileAction.setObjectName("fileImportFileAction")
        self.fileImportURLAction = QtWidgets.QAction(MainWindow)
        self.fileImportURLAction.setProperty("name", "fileImportURLAction")
        self.fileImportURLAction.setObjectName("fileImportURLAction")
        self.helpRegexLibAction = QtWidgets.QAction(MainWindow)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap("image16"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.helpRegexLibAction.setIcon(icon14)
        self.helpRegexLibAction.setProperty("name", "helpRegexLibAction")
        self.helpRegexLibAction.setObjectName("helpRegexLibAction")
        self.FileRevertAction = QtWidgets.QAction(MainWindow)
        self.FileRevertAction.setProperty("name", "FileRevertAction")
        self.FileRevertAction.setObjectName("FileRevertAction")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.fileMenu.addAction(self.fileNewAction)
        self.fileMenu.addAction(self.fileOpenAction)
        self.fileMenu.addAction(self.fileSaveAction)
        self.fileMenu.addAction(self.fileSaveAsAction)
        self.fileMenu.addSeparator()
        self.fileMenu.addAction(self.FileRevertAction)
        self.fileMenu.addSeparator()
        self.fileMenu.addAction(self.fileImportFileAction)
        self.fileMenu.addAction(self.fileImportURLAction)
        self.fileMenu.addSeparator()
        self.fileMenu.addAction(self.fileExitAction)
        self.fileMenu.addSeparator()
        self.editMenu.addAction(self.editUndoAction)
        self.editMenu.addAction(self.editRedoAction)
        self.editMenu.addSeparator()
        self.editMenu.addAction(self.editCutAction)
        self.editMenu.addAction(self.editCopyAction)
        self.editMenu.addAction(self.editPasteAction)
        self.editMenu.addSeparator()
        self.editMenu.addAction(self.examineAction)
        self.editMenu.addAction(self.editPauseAction)
        self.editMenu.addSeparator()
        self.editMenu.addAction(self.editPreferencesAction)
        self.helpMenu.addSeparator()
        self.helpMenu.addAction(self.helpHelpAction)
        self.helpMenu.addAction(self.helpPythonHelpAction)
        self.helpMenu.addSeparator()
        self.helpMenu.addAction(self.helpRegexReferenceAction)
        self.helpMenu.addAction(self.helpRegexLibAction)
        self.helpMenu.addSeparator()
        self.helpMenu.addAction(self.helpVisitWebsiteAction)
        self.helpMenu.addAction(self.helpCheckForUpdateAction)
        self.helpMenu.addAction(self.helpReportBugAction)
        self.helpMenu.addSeparator()
        self.helpMenu.addAction(self.helpAboutAction)
        self.menubar.addAction(self.fileMenu.menuAction())
        self.menubar.addAction(self.editMenu.menuAction())
        self.menubar.addAction(self.helpMenu.menuAction())
        self.toolBar.addSeparator()

        self.retranslateUi(MainWindow)
        self.tabWidget3.setCurrentIndex(1)
        self.resultTabWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.textLabel1.setText(_translate("MainWindow", "Match Number"))
        self.replaceLabel.setText(_translate("MainWindow", "Replace Number"))
        self.tabWidget3.setTabText(self.tabWidget3.indexOf(self.tab), _translate("MainWindow", "Search String"))
        self.tabWidget3.setTabText(self.tabWidget3.indexOf(self.tab_2), _translate("MainWindow", "Replace String"))
        self.resultTabWidget.setTabText(self.resultTabWidget.indexOf(self.tab_3), _translate("MainWindow", "Group"))
        self.resultTabWidget.setTabText(self.resultTabWidget.indexOf(self.tab_4), _translate("MainWindow", "Match"))
        self.resultTabWidget.setTabText(self.resultTabWidget.indexOf(self.TabPage), _translate("MainWindow", "Match All"))
        self.resultTabWidget.setTabText(self.resultTabWidget.indexOf(self.TabPage_2), _translate("MainWindow", "Replace"))
        self.resultTabWidget.setTabText(self.resultTabWidget.indexOf(self.TabPage_3), _translate("MainWindow", "Sample Code"))
        self.groupBox1.setTitle(_translate("MainWindow", "Regular Expresssion Pattern"))
        self.buttonGroup2.setTitle(_translate("MainWindow", "Flags"))
        self.ignorecaseCheckBox.setToolTip(_translate("MainWindow", "Perform case-insensitive matching; expressions like [A-Z] will match\n"
"lowercase letters, too. This is not affected by the current locale."))
        self.ignorecaseCheckBox.setText(_translate("MainWindow", "Ignore Case"))
        self.multilineCheckBox.setToolTip(_translate("MainWindow", "When specified, the pattern character \"^\" matches at the beginning of the \n"
"string and at the beginning of each line (immediately following each newline); \n"
"and the pattern character \"$\" matches at the end of the string and at the end \n"
"of each line (immediately preceding each newline). By default, \"^\" matches \n"
"only at the beginning of the string, and \"$\" only at the end of the string and \n"
"immediately before the newline (if any) at the end of the string."))
        self.multilineCheckBox.setText(_translate("MainWindow", "Multi Line"))
        self.dotallCheckBox.setToolTip(_translate("MainWindow", "Make the \".\" special character match any character at all, including a \n"
"newline; without this flag, \".\" will match anything except a newline."))
        self.dotallCheckBox.setText(_translate("MainWindow", "Dot All"))
        self.verboseCheckBox.setToolTip(_translate("MainWindow", "This flag allows you to write regular expressions that look nicer. Whitespace \n"
"within the pattern is ignored, except when in a character class or preceded by \n"
"an unescaped backslash, and, when a line contains a \"#\" neither in a character\n"
"class or preceded by an unescaped backslash, all characters from the leftmost \n"
"such \"#\" through the end of the line are ignored."))
        self.verboseCheckBox.setText(_translate("MainWindow", "Verbose"))
        self.localeCheckBox.setToolTip(_translate("MainWindow", "Make \\w, \\W, \\b, and \\B dependent on the current locale."))
        self.localeCheckBox.setText(_translate("MainWindow", "Locale"))
        self.unicodeCheckBox.setToolTip(_translate("MainWindow", "\"Make \\w, \\W, \\b, and \\B dependent on the Unicode character properties \n"
"database. New in Python version 2.0."))
        self.unicodeCheckBox.setText(_translate("MainWindow", "Unicode"))
        self.fileMenu.setTitle(_translate("MainWindow", "&File"))
        self.editMenu.setTitle(_translate("MainWindow", "&Edit"))
        self.helpMenu.setTitle(_translate("MainWindow", "&Help"))
        self.fileNewAction.setText(_translate("MainWindow", "&New"))
        self.fileNewAction.setIconText(_translate("MainWindow", "New"))
        self.fileNewAction.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.fileOpenAction.setText(_translate("MainWindow", "&Open..."))
        self.fileOpenAction.setIconText(_translate("MainWindow", "Open"))
        self.fileOpenAction.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.fileSaveAction.setText(_translate("MainWindow", "&Save"))
        self.fileSaveAction.setIconText(_translate("MainWindow", "Save"))
        self.fileSaveAction.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.fileSaveAsAction.setText(_translate("MainWindow", "Save &As..."))
        self.fileSaveAsAction.setIconText(_translate("MainWindow", "Save As"))
        self.fileExitAction.setText(_translate("MainWindow", "E&xit"))
        self.fileExitAction.setIconText(_translate("MainWindow", "Exit"))
        self.editUndoAction.setText(_translate("MainWindow", "&Undo"))
        self.editUndoAction.setIconText(_translate("MainWindow", "Undo"))
        self.editUndoAction.setShortcut(_translate("MainWindow", "Ctrl+Z"))
        self.editRedoAction.setText(_translate("MainWindow", "&Redo"))
        self.editRedoAction.setIconText(_translate("MainWindow", "Redo"))
        self.editRedoAction.setShortcut(_translate("MainWindow", "Ctrl+Y"))
        self.editCutAction.setText(_translate("MainWindow", "&Cut"))
        self.editCutAction.setIconText(_translate("MainWindow", "Cut"))
        self.editCutAction.setShortcut(_translate("MainWindow", "Ctrl+X"))
        self.editCopyAction.setText(_translate("MainWindow", "C&opy"))
        self.editCopyAction.setIconText(_translate("MainWindow", "Copy"))
        self.editCopyAction.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.editPasteAction.setText(_translate("MainWindow", "&Paste"))
        self.editPasteAction.setIconText(_translate("MainWindow", "Paste"))
        self.editPasteAction.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.examineAction.setText(_translate("MainWindow", "E&xamine Regex"))
        self.examineAction.setIconText(_translate("MainWindow", "Examine Regex for Match"))
        self.examineAction.setShortcut(_translate("MainWindow", "Ctrl+X"))
        self.helpContentsAction.setText(_translate("MainWindow", "&Contents..."))
        self.helpContentsAction.setIconText(_translate("MainWindow", "Contents"))
        self.helpIndexAction.setText(_translate("MainWindow", "&Index..."))
        self.helpIndexAction.setIconText(_translate("MainWindow", "Index"))
        self.helpAboutAction.setText(_translate("MainWindow", "&About"))
        self.helpAboutAction.setIconText(_translate("MainWindow", "About"))
        self.regexChangedAction.setText(_translate("MainWindow", "Action"))
        self.regexChangedAction.setIconText(_translate("MainWindow", "Action"))
        self.editPauseAction.setText(_translate("MainWindow", "Pause Processing"))
        self.editPauseAction.setIconText(_translate("MainWindow", "Pause Processing"))
        self.editPauseAction.setShortcut(_translate("MainWindow", "Ctrl+P"))
        self.editPreferencesAction.setText(_translate("MainWindow", "Preferences"))
        self.editPreferencesAction.setIconText(_translate("MainWindow", "Preferences"))
        self.helpHelpAction.setText(_translate("MainWindow", "Help"))
        self.helpHelpAction.setIconText(_translate("MainWindow", "Help"))
        self.helpHelpAction.setShortcut(_translate("MainWindow", "Ctrl+/"))
        self.helpPythonHelpAction.setText(_translate("MainWindow", "&Python Regex Help"))
        self.helpPythonHelpAction.setIconText(_translate("MainWindow", "Python Regex Help"))
        self.helpRegexReferenceAction.setText(_translate("MainWindow", "&Regex Reference Guide"))
        self.helpRegexReferenceAction.setIconText(_translate("MainWindow", "Regex Reference Guide"))
        self.helpRegexReferenceAction.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.helpVisitWebsiteAction.setText(_translate("MainWindow", "&Visit Kodos Website"))
        self.helpVisitWebsiteAction.setIconText(_translate("MainWindow", "&Visit Kodos Website"))
        self.helpCheckForUpdateAction.setText(_translate("MainWindow", "&Check for Kodos Update"))
        self.helpCheckForUpdateAction.setIconText(_translate("MainWindow", "Check for Kodos Update"))
        self.helpReportBugAction.setText(_translate("MainWindow", "Report a &Bug"))
        self.helpReportBugAction.setIconText(_translate("MainWindow", "Report a Bug"))
        self.fileImportFileAction.setText(_translate("MainWindow", "Import &File"))
        self.fileImportFileAction.setIconText(_translate("MainWindow", "Import File"))
        self.fileImportURLAction.setText(_translate("MainWindow", "Import &URL"))
        self.fileImportURLAction.setIconText(_translate("MainWindow", "Import URL"))
        self.helpRegexLibAction.setText(_translate("MainWindow", "Regex &Library"))
        self.helpRegexLibAction.setIconText(_translate("MainWindow", "Regex Library"))
        self.helpRegexLibAction.setToolTip(_translate("MainWindow", "Open the Regex Library"))
        self.helpRegexLibAction.setShortcut(_translate("MainWindow", "Ctrl+L"))
        self.FileRevertAction.setText(_translate("MainWindow", "&Revert Kodos File"))
        self.FileRevertAction.setIconText(_translate("MainWindow", "Revert Kodos File"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

